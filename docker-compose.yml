version: '3.9'

services:
  # üê¨ MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: desafio_db
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - micro_net

  # üêá RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"  # painel de controle
    networks:
      - micro_net

  # üì¶ Microservi√ßo de Estoque
  estoque:
    build:
      context: .
      dockerfile: ./Estoque/Dockerfile
    container_name: estoque
    restart: always
    depends_on:
      - mysql
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__MySql=Server=mysql;Port=3306;Database=estoque;User=root;Password=root;
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
    ports:
      - "5001:8080"
    networks:
      - micro_net

  # üßæ Microservi√ßo de Vendas
  vendas:
    build:
      context: .
      dockerfile: ./Vendas/Dockerfile
    container_name: vendas
    restart: always
    depends_on:
      - mysql
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__MySql=Server=mysql;Port=3306;Database=vendas;User=root;Password=root;
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
    ports:
      - "5002:8080"
    networks:
      - micro_net

  # üåê API Gateway
  apigateway:
    build:
      context: .
      dockerfile: ./ApiGateway/Dockerfile
    container_name: apigateway
    restart: always
    depends_on:
      - vendas
      - estoque
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5000:8080"
    networks:
      - micro_net

networks:
  micro_net:
    driver: bridge

volumes:
  mysql_data: